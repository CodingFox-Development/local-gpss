name: Build and Release

on:
  push:
    tags:
      - "v*"  # Run only when a tag is pushed (e.g., v1.0.3)
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    name: Build for ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: linux-x64
            output: linux64
          - os: ubuntu-latest
            arch: linux-arm64
            output: linux-arm64
          - os: macos-latest
            arch: osx-x64
            output: osx64
          - os: windows-latest
            arch: win-x64
            output: win64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Publish ${{ matrix.arch }}
        shell: bash
        run: |
          dotnet publish -c Release -o ./output/${{ matrix.output }} --self-contained true \
            -p:PublishReadyToRun=true -p:PublishSingleFile=true \
            -p:EnableCompressionInSingleFile=true \
            -r ${{ matrix.arch }}

      - name: Set execute permissions (Linux/macOS)
        if: runner.os != 'Windows'
        run: chmod +x ./output/${{ matrix.output }}/local-gpss

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output }}
          path: output/${{ matrix.output }}/*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
  
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: false  # This ensures we get the original zips
  
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*.zip  # This will catch the artifact ZIP files
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
          draft: true
          prerelease: false
